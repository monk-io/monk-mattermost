---
namespace: mattermost-preview

mattermost:
  defines: runnable
  metadata:
    name: mattermost
    description: |
      Mattermost is an open-source, self-hosted messaging and collaboration platform that allows teams to communicate and collaborate in real-time. It is similar to other messaging platforms like Slack and Microsoft Teams, but with the added benefit of being self-hosted, giving teams more control over their data and security.
      Mattermost offers a range of features, including group messaging, file sharing, video conferencing, and integrations with other tools like Jira, GitHub, and Trello. It also has a robust notification system that allows users to customize their alerts and stay up-to-date on important conversations.
      One of the key benefits of Mattermost is its flexibility. It can be customized to fit the specific needs of a team or organization, with options for custom branding, integrations, and plugins. It also offers a range of deployment options, including cloud-based, on-premise, and hybrid solutions.
      Overall, Mattermost is a powerful messaging and collaboration tool that can help teams stay connected and productive, while also providing the security and control that many organizations require.
    tags: self hosted, communication, workflow orchestration, collaboration
    website: https://mattermost.com/
    source: https://github.com/mattermost/mattermost-server
    publisher: monk.io
    icon: https://pbs.twimg.com/profile_images/1524820253938696199/NvcFnuZX_400x400.png
    version: 1.0
    private: true
  services:
    mattermost:
      container: mattermost
      port: 8065
      protocol: tcp
  containers:
    mattermost:
      image: docker.io/mattermost/mattermost-preview
      image-tag: <- $mattermost-preview-image-tag
      paths:
        - <- `${monk-volume-path}/mattermost/${MATTERMOST_DATA_PATH}:/mm/mattermost-data`
  variables:
    mattermost-preview-image-tag:
      type: string
      value: <- $mattermost-image-tag default ("latest")
    MATTERMOST_DATA_PATH:
      type: string
      value: data

nginx:
  defines: runnable
  metadata:
    publisher: monk.io
    email: jakub@monk.io
    tags: ssl, certbot, webserver, nginx
    icon: https://assets.monk.io/icons/nginx-logo-FF65602A76-seeklogo.com.png
    description: Standard webserver with a certbot container as sidecar to generate letsencrypt certificate
    name: NGINX Server with Certbot
    version: 1.0
    website: https://www.nginx.com/
    source: https://github.com/nginx/nginx
    private: true
  depends:
    wait-for:
      runnables:
        - mattermost-preview/mattermost
  services:
    nginx:
      container: nginx-reverse-proxy
      port: <- $listen-port
      protocol: tcp
      host-port: <- $listen-port
  connections:
    mattermost:
      runnable: mattermost-preview/mattermost
      service: mattermost
  files:
    server-def:
      contents: |
        server {
          listen 0.0.0.0:{{ v "listen-port" }};
          location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://{{ v "proxy-target-host" }}:8065;
          }
        }
      mode: 0644
      path: /opt/bitnami/nginx/conf/server_blocks/reverse_proxy.conf
      container: nginx-reverse-proxy
  containers:
    nginx-reverse-proxy:
      image-tag: <- $nginx-image
      image: docker.io/bitnami/nginx
      cap-add:
        - CAP_NET_BIND_SERVICE
  variables:
    proxy-target-host:
      value: <- connection-hostname("mattermost")
      type: string
    listen-port:
      value: <- $nginx-listen-port default (80)
      type: int
    nginx-image:
      value: <- $nginx-image-tag default ("latest")
      type: string
