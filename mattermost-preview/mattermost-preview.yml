---
namespace: mattermost-preview

mattermost:
  defines: runnable
  metadata:
    defines: metadata
    name: mattermost
    description: Mattermost is a secure, open source platform for communication, collaboration, and workflow orchestration across tools and teams.
    tags: self hosted, communication, collaboration, workflow orchestration
    website: https://mattermost.com/
    source: https://github.com/mattermost/mattermost-server
    publisher: monk.io
    icon: https://pbs.twimg.com/profile_images/1524820253938696199/NvcFnuZX_400x400.png
  services:
    mattermost:
      container: mattermost
      port: 8065
      protocol: tcp
  containers:
    defines: containers
    mattermost:
      image: docker.io/mattermost/mattermost-preview
      image-tag: <- `${mattermost-preview-image-tag}`
      paths:
        - <- `${monk-volume-path}/mattermost/${MATTERMOST_DATA_PATH}:/mm/mattermost-data`
  variables:
    mattermost-preview-image-tag:
      type: string
      value: <- $mattermost-image-tag
    MATTERMOST_DATA_PATH:
      type: string
      value: data

nginx:
  defines: runnable
  inherits: nginx
  depends:
    wait-for:
      runnables:
        - mattermost-preview/mattermost
  services:
    nginx:
      container: nginx-reverse-proxy
      port: <- `${listen-port}` to-i
      protocol: tcp
      host-port: <- `${listen-port}` to-i
  connections:
    mattermost:
      runnable: mattermost-preview/mattermost
      service: mattermost
  files:
    server-def:
      contents: |
        server {
          listen 0.0.0.0:{{ v "listen-port" }};
          location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://{{ v "proxy-target-host" }}:8065;
          }
        }
      mode: 511
      path: /opt/bitnami/nginx/conf/server_blocks/reverse_proxy.conf
      container: nginx-reverse-proxy
  containers:
    defines: containers
    nginx-reverse-proxy:
      image-tag: <- `${nginx-image}`
      image: docker.io/bitnami/nginx
      cap-add:
        - CAP_NET_BIND_SERVICE
  variables:
    proxy-target-host:
      value: <- connection-hostname("mattermost")
      type: string
    listen-port:
      value: <- $nginx-listen-port
      type: string
    nginx-image:
      value: <- $nginx-image-tag
      type: string
